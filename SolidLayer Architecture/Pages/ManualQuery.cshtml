@page
@model SolidLayer_Architecture.Pages.ManualQueryModel
@{
    ViewData["Title"] = "Manual SQL Query";
}

<div class="container">
    <h1>Manual SQL Query</h1>
    <p class="lead">Execute SQL queries against the database. Read-only mode is recommended.</p>

    <div class="row mb-4">
        <div class="col-md-12">
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    <h5><i class="bi bi-exclamation-triangle-fill"></i> Error</h5>
                    <pre>@Model.ErrorMessage</pre>
                </div>
            }

            <div class="card">
                <div class="card-body">
                    <form method="post">
                        <div class="form-group mb-3">
                            <label for="SqlQuery" class="form-label">SQL Query:</label>
                            <textarea asp-for="SqlQuery" class="form-control font-monospace" rows="5" placeholder="SELECT * FROM DISHES"></textarea>
                        </div>
                        <div class="d-flex justify-content-between">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="executeAsReadOnly" name="executeAsReadOnly" checked value="true">
                                <label class="form-check-label" for="executeAsReadOnly">Execute as read-only</label>
                            </div>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-play-fill"></i> Execute Query
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.QueryResults.Any())
    {
        <div class="card">
            <div class="card-header bg-light">
                <h5>Query Results</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm table-striped table-bordered">
                        <thead class="table-dark">
                            <tr>
                                @foreach (var column in Model.QueryResults.First().Keys)
                                {
                                    <th>@column</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in Model.QueryResults)
                            {
                                <tr>
                                    @foreach (var item in row)
                                    {
                                        <td>@item.Value</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="mt-2">
                    <span class="badge bg-info">@Model.QueryResults.Count rows returned</span>
                </div>
            </div>
        </div>
    }
</div>
